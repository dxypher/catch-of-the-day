{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","react_default","a","createElement","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","Order","renderOrder","key","fish","_this","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","this","orderIds","Object","keys","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","_this$props$fish","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","EditFishForm_EditFishForm","AddFishForm_AddFishForm","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","Fish_Fish","Order_Order","Inventory_Inventory","StorePicker","myInput","goToStore","storeName","history","push","action","required","defaultValue","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.93f06fdb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// () instead or {} for implicit return\n// you can also destructure props... { tagline, age } and then\n// just use tagline instead of props.tagline\nconst Header = (props) => (\n  <header className=\"top\">\n    <h1>Catch\n          <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n          </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\nexport default Header;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style   : \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nexport default class Order extends React.Component {\n  static propTypes = {\n    fishes         : PropTypes.object,\n    order          : PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n\n  renderOrder = (key) => {\n    const fish              = this.props.fishes[key];\n    const count             = this.props.order[key];\n    const isAvailable       = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 250, exit: 250 }\n    };\n\n    // make sure fish is loaded from Firebase\n    if(!fish) return null;\n\n    if(!isAvailable){\n      return ( \n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available.\n          </li>\n        </CSSTransition>\n      )\n      \n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 250, exit: 250 }}>\n                <span>{count}</span> \n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name} \n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n          </span>\n        </li>\n      </CSSTransition>\n    )\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total    = orderIds.reduce((prevTotal, key) => {\n      const fish        = this.props.fishes[key];\n      const count       = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n\n      if(isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className='order-wrap'>\n        <h2>Order</h2>\n        <TransitionGroup component='ul' className='order'>\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup >\n        <div className=\"total\">\n          Total: \n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class AddFishForm extends React.Component {\n\n  nameRef   = React.createRef();\n  priceRef  = React.createRef();\n  statusRef = React.createRef();\n  descRef   = React.createRef();\n  imageRef  = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  createFish = (event) => {\n    event.preventDefault();\n    const fish = {\n      name  : this.nameRef.current.value,\n      price : parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc  : this.descRef.current.value,\n      image : this.imageRef.current.value,\n    }\n    this.props.addFish(fish);\n\n    // refresh the form\n    event.currentTarget.reset();\n  }\n\n  render() {\n    return (\n      <form className='fish-edit' onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavilable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n        <button type='submit'>+ Add Fish</button>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class EditFishForm extends Component {\n  handleChange = (event) => {\n    const updatedFish = { \n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish)\n  }\n\n  static propTypes = {\n    fish: PropTypes.shape({\n      image : PropTypes.string,\n      name  : PropTypes.string,\n      desc  : PropTypes.string,\n      status: PropTypes.string,\n      price : PropTypes.number\n    }),\n    index     : PropTypes.string,\n    updateFish: PropTypes.func\n  }\n\n  render() {\n    const { name, price, status, desc, image } = this.props.fish;\n    \n    return (\n      <div className='fish-edit'>\n        <input type='text' name='name' onChange={this.handleChange} value={name} />\n        <input type='text' name='price' onChange={this.handleChange} value={price} />\n        <select name='status' onChange={this.handleChange} value={status}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name='desc' onChange={this.handleChange} value={desc} />\n        <input type='text' name='image' onChange={this.handleChange} value={image} />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport default function Login(props) {\n  return (\n    <nav className='login'>\n      <h2>Inventory Login</h2>\n      <p>Sign in to manage your store's inventory</p>\n      <button className='github' onClick={() => props.authenticate('Github')}>Log In With Github</button>\n      <button className='twitter' onClick={() => props.authenticate('Twitter')}>Log In With Twitter</button>\n      <button className='facebook' onClick={() => props.authenticate('Facebook')}>Log In With Facebook</button>\n    </nav>\n  )\n}\n\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey     : \"AIzaSyBxPlaPMWOadDupLrZ54oKW29-A74W6CzM\",\n  authDomain : \"catch-of-the-day-nh.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-nh.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export\nexport { firebaseApp }\n\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseapp } from '../base';\nexport default class Inventory extends React.Component {\n  static propTypes = {\n    fishes          : PropTypes.object,\n    updateFish      : PropTypes.func,\n    deleteFish      : PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  }\n\n  state = {\n    uid  : null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    })\n  }\n\n  authHandler = async (authData) => {\n    const store = await base.fetch(this.props.storeId, { context: this });  // await puts the store name instead of the Promise\n    if(!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    this.setState({\n      uid  : authData.user.uid,\n      owner: store.owner || authData.user.uid\n    })\n  }\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebase.auth().signInWithPopup(authProvider).then(this.authHandler);\n  }\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({\n      uid: null\n    })\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out</button>\n\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n  if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner.</p>\n          {logout}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm \n            key        = {key}\n            index      = {key}\n            fish       = {this.props.fishes[key]}\n            updateFish = {this.props.updateFish}\n            deleteFish = {this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n      </div>\n    );\n  }\n}\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nexport default class Fish extends Component {\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n\n  static propTypes = {\n    details   : PropTypes.shape({\n      image : PropTypes.string,\n      name  : PropTypes.string,\n      desc  : PropTypes.string,\n      status: PropTypes.string,\n      price : PropTypes.number\n    }) ,\n    addToOrder: PropTypes.func\n  }\n\n  render() {\n    const { image, name,\n            price, desc,\n            status } = this.props.details;\n    const isAvailable = status === 'available';\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable}\n        onClick = {this.handleClick}\n        >{isAvailable ? 'Add To Cart' : 'Sold out!'}</button>\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order : {}\n  }\n  \n  static propTypes = {\n    match: PropTypes.object\n  }\n  componentDidMount() {\n    \n    const { params } = this.props.match;\n    // reinstate localstorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      })\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state  : 'fishes'\n    });\n\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n\n  addFish = (fish) => {\n    // get copy of state, Never mutate the state\n    const  fishes               = {...this.state.fishes};\n    fishes[`fish${Date.now()}`] = fish;\n    this.setState({\n      fishes\n    })\n  };\n\n  updateFish = (key, updatedFish) => {\n    const  fishes = { ...this.state.fishes };\n    fishes[key]   = updatedFish;\n\n    this.setState({\n      fishes\n    })\n  }\n\n  deleteFish = (key) => {\n    const  fishes = { ...this.state.fishes };\n    fishes[key]   = null;\n\n    this.setState({\n      fishes\n    });\n  }\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes\n    })\n  };\n\n  addToOrder = (key) => {\n    const order = {...this.state.order};\n\n    order[key] = order[key] + 1 || 1;\n\n    this.setState({ order });\n  };\n\n  removeFromOrder = (key) => {\n    const order = { ...this.state.order };\n    delete order[key];\n    this.setState({\n      order\n    });\n  }\n\n  render () {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className='fishes'>\n            {Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder}/>)}\n          </ul>\n        </div>\n        <Order \n          fishes          = {this.state.fishes}\n          order           = {this.state.order}\n          removeFromOrder = {this.removeFromOrder}\n        />\n        <Inventory\n          addFish          = {this.addFish}\n          loadSampleFishes = {this.loadSampleFishes}\n          fishes           = {this.state.fishes}\n          updateFish       = {this.updateFish}\n          deleteFish       = {this.deleteFish}\n          storeId          = {this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  }\n\n  // constructor() {\n  //   // runs React.Component first\n  //   super();\n  //   this.goToStore = this.goToStore.bind(this);\n  // }\n\n  myInput = React.createRef();\n  // This would require the constructor method to bind this to the method\n  // goToStore(event) {\n  //   event.preventDefault();\n  //   console.log(this);\n  // }\n\n  // Alternativly you can define a property to not need constructor\n  // bound to instance\n  goToStore = (event) => {\n    event.preventDefault();\n    const storeName = this.myInput.current.value;\n    this.props.history.push(`/store/${storeName}`);\n  }\n\n  render() {\n    return (\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter a Store</h2>\n        <input type=\"text\" ref={this.myInput} required placeholder='Store Name' defaultValue={getFunName()}/>\n        <button type='submit'>Visit Store</button>\n      </form>\n    )\n  }\n}\n\nexport default StorePicker;","import React from 'react'\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found</h2>\n  </div>\n)\n\nexport default NotFound","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport StorePicker from './StorePicker';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/' component={StorePicker} />\n      <Route path='/store/:storeId' component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router'\nimport './css/style.css';\n\n// mounts the app to index.html #main\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}